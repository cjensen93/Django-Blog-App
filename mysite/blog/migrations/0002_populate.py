# Generated by Django 3.2.7 on 2021-10-16 22:57

from django.db import migrations
from datetime import datetime
from django.db import transaction, IntegrityError


def populate_db(appreg, ed):
    VisitorLog = appreg.get_model('blog', 'VisitorLog')

    me = VisitorLog()
    dateString = datetime.now()
    dateString = dateString.strftime("%Y-%m-%d %H:%M:%S")
    me.when = dateString
    me.who = "127.0.0.1"
    me.save()

    google = VisitorLog()
    google.when = dateString
    google.who = "8.8.8.8"
    google.save()

    quad9 = VisitorLog()
    quad9.when = dateString
    quad9.who = "9.9.9.9"
    quad9.save()


def populate_blog(appreg, ed):
    try:
        # FIRST BLOG POPULATION
        Blog = appreg.get_model('blog', 'Blog')
        first = Blog()
        first.title = "Thoughts on Lorem Ipsum"
        first.author = "Bertolli Chuckwagon"
        first.content = "Do you like Cheese Whiz? Spray tan? Fake eyelashes? That's what is Lorem Ipsum to many—it rubs " \
                        "them the wrong way, all the way. It is unreal, uncanny, makes you wonder if something's wrong, " \
                        "it seems to seek your attention for all the wrong reasons. Usually, we prefer the real thing, " \
                        "wine without sulfur based preservatives, real butter, not margarine, and so we'd like our " \
                        "layouts and designs to be filled with real words, with thoughts that count, information that " \
                        "has value. The toppings you may choose for that TV dinner pizza slice when you forgot to shop " \
                        "for foods, the paint you may slap on your face to impress the new boss is your business. But " \
                        "what about your daily bread? Design comps, layouts, wireframes—will your clients accept that " \
                        "you go about things the facile way? Authorities in our business will tell in no uncertain terms " \
                        "that Lorem Ipsum is that huge, huge no no to forswear forever. Not so fast, I'd say, there are " \
                        "some redeeming factors in favor of Greek text, as its use is merely the symptom of a worse " \
                        "problem to take into consideration. You begin with a text, you sculpt information, you " \
                        "chisel away what's not needed, you come to the point, make things clear, add value, you're " \
                        "a content person, you like words. Design is no afterthought, far from it, but it comes in a " \
                        "deserved second. Anyway, you still use Lorem Ipsum and rightly so, as it will always have a " \
                        "place in the web workers toolbox, as things happen, not always the way you like it, not " \
                        "always in the preferred order. Even if your less into design and more into content strategy " \
                        "you may find some redeeming value with, wait for it, dummy copy, no less."
        first.posted = "2021-09-06 15:18:03"
        first.commentNumber = "3"
        first.save()

        # SECOND BLOG POPULATION
        second = Blog()
        second.title = "Lorem Ipsum is Bad"
        second.author = "Bertolli Chuckwagon"
        second.content = "There's a lot of hate out there for a text that amounts to little more than garbled words in " \
                         "an old language. The villagers are out there with a vengeance to get that Frankenstein, " \
                         "wielding torches and pitchforks, wanting to tar and feather it at the least, running it out of " \
                         "town in shame. One of the villagers, Kristina Halvorson from Adaptive Path, holds steadfastly " \
                         "to the notion that design can’t be tested without real content: I’ve heard the argument that " \
                         "'lorem ipsum' is effective in wire-framing or design because it helps people focus on the " \
                         "actual layout, or color scheme, or whatever. What kills me here is that we’re talking about " \
                         "creating a user experience that will (whether we like it or not) be DRIVEN by words. The " \
                         "entire structure of the page or app flow is FOR THE WORDS."
        second.posted = "2021-09-07 08:51:24"
        second.commentNumber = "2"
        second.save()

        # THIRD BLOG POPULATION
        third = Blog()
        third.title = "Google Director speaks up on Lorem Ipsum"
        third.author = "Bertolli Chuckwagon"
        third.content = "Luke Wroblewski, currently a Product Director at Google, holds that fake data can break down " \
                        "in real life: Using dummy content or fake information in the Web design process can result in " \
                        "products with unrealistic assumptions and potentially serious design flaws. A seemingly elegant " \
                        "design can quickly begin to bloat with unexpected content or break under the weight of actual " \
                        "activity. Fake data can ensure a nice looking layout, but it does not reflect what a living, " \
                        "breathing application must endure. Real data does. Websites in professional use templating " \
                        "systems. Commercial publishing platforms and content management systems ensure that you can " \
                        "show different text, different data using the same template. When it's about controlling " \
                        "hundreds of articles, product pages for web shops, or user profiles in social networks, all " \
                        "of them potentially with different sizes, formats, rules for differing elements things can " \
                        "break, designs agreed upon can have unintended consequences and look much different than expected."
        third.posted = "2021-09-08 17:23:48"
        third.commentNumber = "3"
        third.save()

        # FOURTH BLOG POPULATION
        fourth = Blog()
        fourth.title = "Solving Problems with Lorem Ipsum"
        fourth.author = "Bertolli Chuckwagon"
        fourth.content = "This is quite a problem to solve, but just doing without greeking text won't fix it. Using " \
                         "test items of real content and data in designs will help, but there's no guarantee that every " \
                         "oddity will be found and corrected. Do you want to be sure? Then a prototype or beta site with " \
                         "real content published from the real CMS is needed — but you’re not going that far until you " \
                         "go through an initial design cycle. Lorem Ipsum actually is useful in the design stage as it " \
                         "focuses our attention on places where the content is a dynamic block coming from the CMS " \
                         "(unlike static content elements that will always stay the same.) Blocks of Lorem Ipsum with a " \
                         "character count range provide a obvious reminder to check and re-check that the design and the " \
                         "content model match up. Lorem Ipsum actually is useful in the design stage as it focuses our " \
                         "attention on places where the content is dynamic block coming from the CMS (unlike static " \
                         "content elements that will always stay the same.) Blocks of Lorem Ipsum with a character count " \
                         "range provide a obvious reminder to check and re-check that the design and the content model " \
                         "match up."
        fourth.posted = "2021-09-09 12:54:18"
        fourth.commentNumber = "3"
        fourth.save()

        # BLOG ONE COMMENT POPULATION
        Comment = appreg.get_model('blog', 'Comment')
        BlogOneCommentOne = Comment()
        BlogOneCommentOne.blog = first
        BlogOneCommentOne.commenter = "John Davis"
        BlogOneCommentOne.email = "john@gmail.com"
        BlogOneCommentOne.content = "You made some great points here. I never thought of it that way!"
        BlogOneCommentOne.posted = "2021-09-11 12:54:18"
        BlogOneCommentOne.save()

        BlogOneCommentTwo = Comment()
        BlogOneCommentTwo.blog = first
        BlogOneCommentTwo.commenter = "William Johnson"
        BlogOneCommentTwo.email = "william@hotmail.com"
        BlogOneCommentTwo.content = "I don't really agree with what was said, but maybe that's just me."
        BlogOneCommentTwo.posted = "2021-09-11 14:23:21"
        BlogOneCommentTwo.save()

        BlogOneCommentThree = Comment()
        BlogOneCommentThree.blog = first
        BlogOneCommentThree.commenter = "John Davis"
        BlogOneCommentThree.email = "john@gmail.com"
        BlogOneCommentThree.content = "I guess we can agree to disagree."
        BlogOneCommentThree.posted = "2021-09-11 14:29:53"
        BlogOneCommentThree.save()

        # BLOG TWO COMMENT POPULATION
        BlogTwoCommentOne = Comment()
        BlogTwoCommentOne.blog = second
        BlogTwoCommentOne.commenter = "Mark Brown"
        BlogTwoCommentOne.email = "mark@gmail.com"
        BlogTwoCommentOne.content = "You made some great points here. I never thought of it that way!"
        BlogTwoCommentOne.posted = "2021-09-12 09:24:32"
        BlogTwoCommentOne.save()

        BlogTwoCommentTwo = Comment()
        BlogTwoCommentTwo.blog = second
        BlogTwoCommentTwo.commenter = "Tyler Moore"
        BlogTwoCommentTwo.email = "tyler@outlook.com"
        BlogTwoCommentTwo.content = "I agree, these were some interesting points."
        BlogTwoCommentTwo.posted = "2021-09-12 09:39:02"
        BlogTwoCommentTwo.save()

        # BLOG THREE COMMENT POPULATION
        BlogThreeCommentOne = Comment()
        BlogThreeCommentOne.blog = third
        BlogThreeCommentOne.commenter = "Brady Phillips"
        BlogThreeCommentOne.email = "brady@yahoo.com"
        BlogThreeCommentOne.content = "You made some great points here. I never thought of it that way!"
        BlogThreeCommentOne.posted = "2021-09-13 16:39:59"
        BlogThreeCommentOne.save()

        BlogThreeCommentTwo = Comment()
        BlogThreeCommentTwo.blog = third
        BlogThreeCommentTwo.commenter = "Darryl Anderson"
        BlogThreeCommentTwo.email = "darryl@gmail.com"
        BlogThreeCommentTwo.content = "I think they could've gone into more detail here, but I like what was said."
        BlogThreeCommentTwo.posted = "2021-09-13 17:03:24"
        BlogThreeCommentTwo.save()

        BlogThreeCommentThree = Comment()
        BlogThreeCommentThree.blog = third
        BlogThreeCommentThree.commenter = "Brady Phillips"
        BlogThreeCommentThree.email = "brady@yahoo.com"
        BlogThreeCommentThree.content = "I thought they gave plenty of detail and context."
        BlogThreeCommentThree.posted = "2021-09-13 17:07:26"
        BlogThreeCommentThree.save()

        # BLOG FOUR COMMENT POPULATION
        BlogFourCommentOne = Comment()
        BlogFourCommentOne.blog = fourth
        BlogFourCommentOne.commenter = "Robert Schwartz"
        BlogFourCommentOne.email = "robert@gmail.com"
        BlogFourCommentOne.content = "You made some great points here. I never thought of it that way!"
        BlogFourCommentOne.posted = "2021-09-12 07:12:15"
        BlogFourCommentOne.save()

        BlogFourCommentTwo = Comment()
        BlogFourCommentTwo.blog = fourth
        BlogFourCommentTwo.commenter = "Kurt Hopkins"
        BlogFourCommentTwo.email = "kurt@gmail.com"
        BlogFourCommentTwo.content = "This has to be the worst comment I've ever seen"
        BlogFourCommentTwo.posted = "2021-09-12 07:14:36"
        BlogFourCommentTwo.save()

        BlogFourCommentThree = Comment()
        BlogFourCommentThree.blog = fourth
        BlogFourCommentThree.commenter = "Robert Schwartz"
        BlogFourCommentThree.email = "robert@gmail.com"
        BlogFourCommentThree.content = "Ruuuuude......."
        BlogFourCommentThree.posted = "2021-09-12 07:16:52"
        BlogFourCommentThree.save()

    except IntegrityError:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_db),
        migrations.RunPython(populate_blog)
    ]
